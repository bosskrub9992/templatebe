// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/bosskrub9992/templatebe/corelib/database"
	"github.com/bosskrub9992/templatebe/corelib/loggers"
	"github.com/bosskrub9992/templatebe/service/bff/internal/api/v1"
	"github.com/bosskrub9992/templatebe/service/bff/internal/config"
	"github.com/bosskrub9992/templatebe/service/bff/internal/controller"
	"github.com/bosskrub9992/templatebe/service/bff/internal/repository/gormrepo"
	"github.com/bosskrub9992/templatebe/service/bff/internal/server"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeRestServer() (*server.RESTServer, func(), error) {
	configConfig := config.New()
	zerologConfig := config.NewLoggerConfig(configConfig)
	logger := loggers.NewZerolog(zerologConfig)
	postgresConfig := config.NewPostgresConfig(configConfig)
	db, cleanup, err := database.NewPostgres(postgresConfig, logger)
	if err != nil {
		return nil, nil, err
	}
	gormDB, err := database.NewGormDBPostgres(db, logger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	customerRepo := gormrepo.NewCustomerRepo(gormDB)
	customerController := controller.NewCustomerController(logger, customerRepo)
	healthController := controller.NewHealthController()
	handler := v1.NewHandler(customerController, healthController)
	restServer := server.NewRESTServer(configConfig, logger, handler)
	return restServer, func() {
		cleanup()
	}, nil
}

// wire.go:

var controllerSet = wire.NewSet(controller.NewCustomerController, controller.NewHealthController)

var repositorySet = wire.NewSet(gormrepo.NewCustomerRepo)
